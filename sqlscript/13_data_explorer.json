{
	"name": "13_data_explorer",
	"properties": {
		"folder": {
			"name": "electric_vehicle/explorer"
		},
		"content": {
			"query": "USE electric_vehicle_explorer;\n/* Mostrar informacion del vehiculo y su clasificacion del tercer trimestre del 2024 */\n\nSELECT v.vin, v.modelYear, v.make, v.model,\n    classification,\n    vr.filepath(1) as year, vr.filepath(2) as month\nFROM OPENROWSET(\n    BULK 'cafv_eligibility.json',\n    DATA_SOURCE = 'electric_vehicle_data_bronze',\n    FORMAT = 'CSV',\n    FIELDTERMINATOR = '0x0b',  --valor hexadecimal, separador de columnas (vertical tab)\n    FIELDQUOTE = '0x0b',\n    ROWTERMINATOR= '0X0b'\n) WITH(\n    jsonDoc NVARCHAR(MAX)\n)AS cafv_eligibility\nCROSS APPLY OPENJSON(jsonDoc)  --une los valores de jsonDoc y los valores obtenidos del documento JSON en la matriz por OPENJSON\nWITH(\n    cafv_eligibility_id SMALLINT '$.cafvEligibility', --cambia el nombre de la columna\n    classification VARCHAR(100)   \n)\n\nINNER JOIN\n    OPENROWSET(\n        BULK 'vehicle.csv',\n        DATA_SOURCE = 'electric_vehicle_data_bronze',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0',\n        HEADER_ROW = TRUE,\n        FIELDTERMINATOR = ',',\n        ROWTERMINATOR = '\\n'\n    ) WITH (\n        vehicleId         INT,\n        vin               VARCHAR(10),\n        modelYear         SMALLINT,\n        make              VARCHAR(25),\n        model             VARCHAR(25),\n        cafvEligibilityId SMALLINT\n    ) AS [v]\n\nINNER JOIN\n        OPENROWSET(\n            BULK 'vehicle_registration_parquet/year=*/month=*/*.parquet',\n            DATA_SOURCE = 'electric_vehicle_data_bronze',\n            FORMAT = 'PARQUET'\n        ) AS vr\nON (v.vehicleId = vr.vehicleId)\nON (v.cafvEligibilityId = cafvEligibilityId)\nWHERE vr.filepath(1) = '2024' and vr.filepath(2) IN ('06','07','08', '09')     --consulta los meses especificos del a√±o 2024\n;\n\n\n-- UTILIZANDO TABLE COMMON EXPRESSION (CTE)\nWITH \ncte_cafv_eligibility AS\n(\n    SELECT cafv.cafv_eligibility_id, cafv.classification \n    FROM OPENROWSET(\n        BULK 'cafv_eligibility.json',\n        DATA_SOURCE = 'electric_vehicle_data_bronze',\n        FORMAT = 'CSV',\n        FIELDTERMINATOR = '0x0b',  --valor hexadecimal, separador de columnas (vertical tab)\n        FIELDQUOTE = '0x0b',\n        ROWTERMINATOR= '0X0b'\n    ) WITH(\n        jsonDoc NVARCHAR(MAX)\n    )AS cafv_eligibility\n    CROSS APPLY OPENJSON(jsonDoc)  --une los valores de jsonDoc y los valores obtenidos del documento JSON en la matriz por OPENJSON\n    WITH(\n        cafv_eligibility_id SMALLINT '$.cafvEligibility', --cambia el nombre de la columna\n        classification VARCHAR(100)   \n    ) AS cafv\n),\n\ncte_vehicle AS\n(\n    SELECT *\n    FROM\n        OPENROWSET(\n        BULK 'vehicle.csv',\n        DATA_SOURCE = 'electric_vehicle_data_bronze',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0',\n        HEADER_ROW = TRUE,\n        FIELDTERMINATOR = ',',\n        ROWTERMINATOR = '\\n'\n    ) WITH (\n        vehicleId         INT,\n        vin               VARCHAR(10),\n        modelYear         SMALLINT,\n        make              VARCHAR(25),\n        model             VARCHAR(25),\n        cafvEligibilityId SMALLINT\n    ) AS [result]\n),\n\ncte_vehicle_registration AS \n(\n    SELECT vr_data.*, vr_data.filepath(1) as year, vr_data.filepath(2) as month\n    FROM\n        OPENROWSET(\n        BULK 'vehicle_registration_parquet/year=*/month=*/*.parquet',\n        DATA_SOURCE = 'electric_vehicle_data_bronze',\n        FORMAT = 'PARQUET'\n        ) WITH (\n            vehicleId           INT,\n            registrationDate    DATETIME2(7)\n        )AS vr_data\n)\nSELECT cv.vin, cv.modelYear, cv.make, cv.model,\n    cce.classification,\n    cvr.year, cvr.month\nFROM cte_vehicle AS cv\nINNER JOIN cte_vehicle_registration AS cvr ON (cv.vehicleId = cvr.vehicleId)\nINNER JOIN cte_cafv_eligibility AS cce ON (cv.cafvEligibilityId = cce.cafv_eligibility_id)\nWHERE year = '2024' AND month IN ('06','07','08','09');\n\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "electric_vehicle_explorer",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}